// Generated by CoffeeScript 1.4.0
var EventEmitter, MockResponse,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

EventEmitter = require("events").EventEmitter;

MockResponse = (function(_super) {

  __extends(MockResponse, _super);

  function MockResponse() {
    this.header = {};
    this.body = null;
  }

  MockResponse.prototype.set = function(key, val) {
    return this.header[key] = val;
  };

  MockResponse.prototype.get = function(key) {
    return this.header[key];
  };

  MockResponse.prototype.send = function() {
    return this.emit('getResult', this);
  };

  return MockResponse;

})(EventEmitter);

module.exports = MockResponse;
