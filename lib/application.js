// Generated by CoffeeScript 1.4.0
var Application, Params, crypto, express, fs, http, https, path, tokenBuilder, _;

express = require("express");

fs = require("fs");

path = require("path");

https = require("https");

http = require("http");

crypto = require("crypto");

_ = require("underscore");

tokenBuilder = require("./tokenBuilder");

Params = require(path.join(__dirname, 'params'));

Application = (function() {

  function Application(config) {
    var _this = this;
    this.config = config;
    this.app = express();
    this.app.all("/mi7/:sub_app", function(req, res) {
      var params, token;
      params = Params.build(req);
      token = new tokenBuilder(params);
      return res.send(JSON.stringify(token['token']));
    });
  }

  Application.prototype.initSubApplications = function() {
    return this.subApps = {};
  };

  Application.prototype.run = function() {
    if (this.config.ssl) {
      https.createServer(this.config.ssl_config, this.app).listen(this.config.port);
      return console.info("HTTPS Port " + this.config.port + " now listening... ");
    } else {
      https.createServer(this.app).listen(this.config.port);
      return console.info("HTTP Port " + this.config.port + " now listening... ");
    }
  };

  Application.prototype.addSubApplication = function(dirname) {};

  Application.prototype.subApplicationDirs = function() {
    var dirs, sub_apps_dir,
      _this = this;
    this.sadirs = [];
    sub_apps_dir = this.config.sub_apps_dir;
    dirs = fs.readdirSync(sub_apps_dir);
    _.each(dirs, function(name) {
      var stats;
      stats = fs.statSync(path.join(sub_apps_dir, name));
      if (stats.isDirectory()) {
        return _this.sadirs.push(path.join(sub_apps_dir, name));
      }
    });
    return this.sadirs;
  };

  return Application;

})();

module.exports = Application;
